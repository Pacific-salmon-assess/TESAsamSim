% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcSynchMetrics.R
\name{calcSynchMetrics}
\alias{calcSynchMetrics}
\title{Calculate synchrony metrics}
\usage{
calcSynchMetrics(
  synchList,
  windowSize = 10,
  synch = TRUE,
  compCV = TRUE,
  corr = FALSE,
  weight = TRUE
)
}
\arguments{
\item{synchList}{The output list \code{x_y_synchArrays.Rdata} generated by
\code{recoverySimulator.R} saved in the directory \code{outputs/simData/}.}

\item{windowSize}{A numeric representing the size of the moving window.}

\item{synch}{A logical (defaults to TRUE) specifying whether the synchrony
metric phi should be calculated.}

\item{compCV}{A logical (defaults to TRUE) specifying whether mean component
CV should be calculated.}

\item{corr}{A logical (defaults to FALSE) specifying whether mean pairwise
correlation coefficients should be calculated (approximately equivalent to
phi).}

\item{weight}{A logical specifying whether compCV should be weighted by mean
abundance of recruits.}
}
\value{
Returns a list containing three metrics (synchrony, component CV,
and mean pairwise correlation coefficient) for four simulation output time
series (recruits by brood year, log(R/S), SR model residuals, and spawner
abundance). Each list element is a matrix with dimensions nYears x nTrials.
}
\description{
This function calculates rolling window estimates of several metrics related
to Thibaut and Connoly's (2013 Ecology Letters) analysis of aggregate
variability, including the synchrony index (phi), mean temporal coefficient
of variation among components (with weighting options), and mean pairwise
correlation coefficients. It is dependent on the \code{synchrony} package.
Contains multiple conditionals because computation can slows as the number
of time series, time series length, or the number of trials increase.
}
\examples{
#relatively large number of trials so will take some time to run
calcSynchMetrics(synchList, windowSize = 10, synch = TRUE,
                 compCV = TRUE, corr = FALSE, weight = TRUE)

}
