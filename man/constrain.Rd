% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tacConstraint.R
\name{constrain}
\alias{constrain}
\title{Constrain mixed-stock harvest}
\usage{
constrain(rec, highFRP, manAdjustment, manUnit)
}
\arguments{
\item{rec}{A numeric vector representing MU-specific return abundance.}

\item{highFRP}{A numeric vector representing MU-specific upper fishery
reference points. When return abundance is above this value
_adjacent_ MUs do not need to be constrained.}

\item{manAdjustment}{A numeric vector representing MU-specific management
adjustments. These values are used to adjust spawner abundance
to account for en route mortality (i.e. they increase the target escapement
goal).}

\item{manUnit}{A character vector identifying the MU that each CU belongs to.}
}
\value{
Returns a two-element list of binary vectors. In \code{muAboveFRP}
ones represent MUs with return abundance above their FRP after incorporating
management adjustments. In \code{muConstrained} ones represent MUs that
should be constrained based on the abundance of _adjacent_ MUs.
}
\description{
This function asseses whether mixed stock fisheries should be constrained
based on the abundance of co-migrating stocks. This process is modeled on
the current total allowable mortality rule used to manage Fraser River
sockeye salmon fisheries and is not a universal function.
}
\details{
Total allowable catch (TAC) is set as a function of estimated abundance
at the management unit level. A given MU's TAC is constrained unless all
MUs with adjacent migration phenologies are above their upper fishery
reference point. Note that estimates of TAC and the application of
any constraints occurs in \code{calcTAC} function.

**Note** Although all input vectors have length equal to \code{nCU}, the
number of unique values will be equal to \code{nMU} because this is the
scale at which in-season forecasts are available.

**Note** Originally formatted with forecasted abundance but replaced with
true to avoid inflating outcome uncertainty.
}
\examples{
#Note that the function is intended to receive vectors rather than the DFs
#used in this example to increase efficiency.
head(exampleHCRList)
names(exampleHCRList)[4] <- "recRYMU"

rec <- exampleHCRList$recRYMU
highFRP <- exampleHCRList$highFRP
manAdjustment <- exampleHCRList$adjustment
manUnit <- exampleHCRList$mu
constrain(rec, highFRP, manAdjustment, manUnit)
}
